apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.synthesized.name }}-deployment
  labels:
    app: {{ .Values.synthesized.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.synthesized.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.synthesized.name }}
    spec:
      initContainers:
      - name: pre-populate-pvc
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "cp -r /synthesized/jupyter/* /mnt/synthesized/"]
        volumeMounts:
        - name: {{ .Values.synthesized.name }}-storage
          mountPath: /mnt/synthesized
      containers:
      - name: synthesized
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: {{ .Values.synthesized.name }}-storage
          mountPath: /synthesized/jupyter
        {{- with .Values.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        envFrom:
        - secretRef:
            name: {{ .Values.synthesized.name }}-secret
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
      volumes:
      - name: {{ .Values.synthesized.name }}-storage
        persistentVolumeClaim:
          claimName: {{ .Values.synthesized.name }}-pvc
      {{- with .Values.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
